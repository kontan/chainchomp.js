{"name":"chainchomp.js","tagline":"Lightweight JavaScript Sandbox","body":"chainchomp.js: Lightweight JavaScript Sandbox\r\n------------------------------\r\n\r\n**This project is experimental. Some vulnerability may be found and the project may abort.**\r\n\r\n## Usage\r\n\r\nTo use chainchomp.js, add the following line to your html code:\r\n\r\n    <script src=\"https://raw.github.com/kontan/chainchomp.js/master/chainchomp.js\"></script>\r\n\r\nNow chainchomp.js provides only one function:\r\n\r\n    function chainchomp(script: string, scope?: any, options?: any): any;\r\n\r\n## Example\r\n\r\n    console.log(chainchomp('return 1 + 2'));    // prints \"3\"\r\n\r\n    chainchomp('window.location = \"http://example.com/\"');    // TypeError\r\n\r\n    chainchomp('puts(\"Hello, World!\");', { puts: function(s){ console.log(s); } });    // prints \"Hello, World!\"\r\n\r\n## Restriction\r\n\r\n* ***Some basic objects, such as `String`, `Number` and `Boolean` are freezed***. (`Object.freeze`) It may influences all your codes after `chainchomp` is called.\r\n* `eval` and `Function` are banned in guest codes. ( `eval === undefined && Function === undefined` )\r\n* All guest code runs under Strict mode. \r\n\r\n\r\n## What's Chain Chomp?\r\n\r\n[Chomp chomp!](https://www.google.co.jp/search?q=Chain+Chomp&tbm=isch)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}